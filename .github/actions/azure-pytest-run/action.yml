name: Running PyTest
description: 'Run pytest tests that may rely on Azure and hence they are executed in the context of an authenticated console. Tests can get the authentication token from it if needed.'

inputs:
  creds:
    description: 'Azure credentials'
    required: true
  source:
    description: 'Directory where the source code is located. Defaults to current directory.'
    required: true
    default: .
  configuration:
    description: 'PyTest configuration file path (.ini).'
    required: false
    default: ''
  useConda:
    description: 'Indicates if the tests will run using an specific conda environment.'
    required: false
    default: 'false'
  condaEnvName:
    description: 'Name of the conda environment to use. Required if useConda is true.'
    required: false
    default: ''
  testFolder:
    description: 'Folder where test are placed. Defaults to tests.'
    required: true
    default: tests
  version:
    description: 'PyTest library version.'
    required: true
    default: 6.2.5
  params:
    description: 'Parameters, if any, to provide to the test. Provide them starting with -q, for instance `-q --param1=value1 --param2=value2`'
    required: false
    default: ''
  outputFile:
    description: 'File name where the results will be generated. File is XML.'
    required: false
    default: '${{ github.workspace }}/test-results/results.xml'

runs:
  using: "composite"
  steps:
    - name: 'Running PyTest'
      shell: bash -l {0}
      run: |
        set -e
        if ${{ inputs.useConda }}; then
          echo "::debug::Activating conda environment ${{ inputs.condaEnvName }}"
          source $CONDA/etc/profile.d/conda.sh
          conda activate ${{ inputs.condaEnvName }}
          if ! [[ $(conda list --json | jq -r '.[] | select(.name=="pytest")') ]]; then
            echo "::debug::Environment doesn't contain PyTest. Installing..."
            pip install pytest==${{ inputs.version }}
            pip install pytest-cov
          fi
        fi
        if [[ '${{ inputs.configuration }}' == '' ]]; then
          echo "::debug::Running tests"
          (cd ${{ inputs.source }} && python -m pytest ${{ inputs.testFolder }} ${{ inputs.configuration }} --junit-xml=${{ inputs.outputFile }})
        else
          echo "::debug::Running tests with configuration from ${{ inputs.configuration }}."
          (cd ${{ inputs.source }}; python -m pytest ${{ inputs.testFolder }} ${{ inputs.configuration }} -c ${{ inputs.configuration }} --junit-xml=${{ inputs.outputFile }})
        fi
        if ${{ inputs.useConda }}; then
          echo "::debug::Deactivating conda environment ${{ inputs.condaEnvName }}"
          conda deactivate
        fi
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action/composite@v1
      with:
        files: ${{ inputs.outputFile }} 
        fail_on: "test failures"